#! /usr/bin/env python

import waflib.Options
from waf_dynamo import platform_supports_feature

def build(bld):
    for name in ['test_graphics', 'test_glsl_uniform_parser']:
        bld.program(features = 'cxx cprogram test',
                    includes = ['../../src', '../../proto'],
                    exported_symbols = ['GraphicsAdapterNull'],
                    source = name + '.cpp',
                    use = 'TESTMAIN DDF DLIB SOCKET PROFILE_NULL PLATFORM_NULL graphics_null graphics_transcoder_null',
                    target = name)

    if not bld.env.PLATFORM in ('x86_64-linux','x86_64-ios'):

        extra_libs = []
        extra_symbols = []

        graphics_libs = ['GRAPHICS', 'graphics_transcoder_basisu']
        glfw_lib = ['DMGLFW']
        platform_lib = ['PLATFORM']

        if bld.env.PLATFORM in ('armv7-android', 'arm64-android'):
            extra_libs += ['OPENGL', 'graphics']
            extra_symbols += ['GraphicsAdapterOpenGL']

        if platform_supports_feature(bld.env.PLATFORM, 'vulkan', {}) and waflib.Options.options.with_vulkan:
            extra_libs += ['VULKAN', 'graphics_vulkan_experimental']
            extra_symbols += ['GraphicsAdapterVulkan']

        if platform_supports_feature(bld.env.PLATFORM, 'dx12', {}) and waflib.Options.options.with_dx12:
            extra_libs += ['DX12', 'graphics_dx12']
            extra_symbols += ['GraphicsAdapterDX12']

        if platform_supports_feature(bld.env.PLATFORM, 'vulkan', {}) and waflib.Options.options.with_vulkan:
            extra_libs += ['VULKAN']
            extra_symbols += ['GraphicsAdapterVulkan']
            graphics_libs += ['GRAPHICS_VULKAN']
            platform_lib = ['PLATFORM_VULKAN']

        bld.program(features = 'cxx cprogram test skip_test',
                    includes = ['../../src', '../../proto'],
                    exported_symbols = extra_symbols,
                    source = 'test_app_graphics.cpp',
                    use = 'TESTMAIN APP DDF DLIB PROFILE'.split() + graphics_libs + platform_lib + glfw_lib + extra_libs,
                    target = 'test_app_graphics')
